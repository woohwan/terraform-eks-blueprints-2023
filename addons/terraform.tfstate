{
  "version": 4,
  "terraform_version": "1.3.6",
  "serial": 81,
  "lineage": "1a90e5b6-8942-199b-1ed1-ca301d5bbd5b",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "eks_blueprints",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:ap-northeast-2:532805286864:cluster/blueprints-terraform",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ERXdPREE1TkRBMU1Gb1hEVE16TURFd05UQTVOREExTUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHZpCnFJMXhTdUJqRFprdDNHTmppb0VMc3I4a2kvdkZqTE1lYkFsTmNhd1doVytaUXJXTVVrUXhEcDgzV3JSckp4N0gKZEhoN21SRSt2dzRScnBmWXVYTG1YMnM3VkxlK1hwT2M5Z05LOUtVVmd2UjFTdUZ5ait4L1Z0SkE0TkFrRlk4RQo2VzJIWE9qNW1HcjFQdCtHaTVZRThCZ1dtZ2tDUnlTdjNqcThRcTFDdGNNZytoMXVlcU51d3RMd09RSitnOGZ3Ci9oMnpOeDdYOHFNTWJpdUFSeDlGTnVPWWNka0R4VVVtc3dNcy9udGNsNFZUUVN4L2ZCQ2xSTWRoYnhHeTFjUWsKQkFSR2pSTDMyL0dOaVpRWW0wVld5UENlQ3ZqbkZicUN4WlpNTUppL1R4NEdESnNZN3NJdEV6endnaVZUNDZxSwozd0M0V3hnN1VMYnAwWUNBYTVjQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQbHRBNDZkYVBVbDhqY2hzT3lSYnBOUXZkK2dNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRWRSczRzbFZodWhHRDRqRWo0cAp1OUJFSUNObDZickZ5WnhramhiOGM1UzNWSlN0OUdMdmI0dnFtdU9uMXAyKy9ubCtWS1JpaFFxaEMyOEFOV0VXCkdLUldERUpHU0VCU1JoeGpxano1cVQ5cXp3dU1SdGZxaS9zbWtKK3FRZlorS0s1ZS9haU5IV3BXeWE3RU93S3UKSEkvWDZ4clFlckJPMUtTdzJZYnM5VWltZmZUMzhkWTRiNmV0Q3VoZ1dXQmpmWCtFNDZ2Vk5MdGliTlFiRUxZMwo3Rk5JNHJpeTgwMGNaWFFTOHpLSDArenBMK0xoOVN2NWRjUG5HWWVSbnM4YjRkUGhua3M0aERqVEFWVGZUN0FsCkJCRlk0TDhtK1FXaGVNZ082cVUyd2Qxa1Vub2EvVmhIQitTSC9sTUk2MnY4YUxsWjM5SnNTUUNVTDFjb2Z4S00KR3hVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
              }
            ],
            "cluster_id": null,
            "created_at": "2023-01-08 09:35:58.998 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator",
              "controllerManager",
              "scheduler"
            ],
            "endpoint": "https://B55D11B7B9D026CF47CB1FE6BD35151A.gr7.ap-northeast-2.eks.amazonaws.com",
            "id": "blueprints-terraform",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.ap-northeast-2.amazonaws.com/id/B55D11B7B9D026CF47CB1FE6BD35151A"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "blueprints-terraform",
            "outpost_config": [],
            "platform_version": "eks.5",
            "role_arn": "arn:aws:iam::532805286864:role/blueprints-terraform-cluster-role",
            "status": "ACTIVE",
            "tags": {
              "Blueprint": "blueprints-terraform",
              "GithubRepo": "github.com/aws-ia/terraform-aws-eks-blueprints"
            },
            "version": "1.23",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0b5e691595caced40",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0fb1f68cd6fea450a"
                ],
                "subnet_ids": [
                  "subnet-02404a638cbcda547",
                  "subnet-04848f57159f7c020",
                  "subnet-0d650407efdccacde"
                ],
                "vpc_id": "vpc-0f7785a91de4a28e3"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "eks_blueprints",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "blueprints-terraform",
            "name": "blueprints-terraform",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYXAtbm9ydGhlYXN0LTIuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFYWUROTFBQSUhBM0ZWRE1KJTJGMjAyMzAxMDglMkZhcC1ub3J0aGVhc3QtMiUyRnN0cyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjMwMTA4VDEzMDg0NFomWC1BbXotRXhwaXJlcz0wJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCUzQngtazhzLWF3cy1pZCZYLUFtei1TaWduYXR1cmU9YzE4MGIyNzMzOTZiZDJjZDcwZDVkNTA2N2ZjZjU3MjMyODYxNWNjZDI3YzIwNzcyZGJmMWVhNGQ3NDYyYTlmMw"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "532805286864",
            "arn": "arn:aws:iam::532805286864:user/whpark",
            "id": "532805286864",
            "user_id": "AIDAXYDNLPPIEW2SY5NBL"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons",
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "eks_cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:ap-northeast-2:532805286864:cluster/blueprints-terraform",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ERXdPREE1TkRBMU1Gb1hEVE16TURFd05UQTVOREExTUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHZpCnFJMXhTdUJqRFprdDNHTmppb0VMc3I4a2kvdkZqTE1lYkFsTmNhd1doVytaUXJXTVVrUXhEcDgzV3JSckp4N0gKZEhoN21SRSt2dzRScnBmWXVYTG1YMnM3VkxlK1hwT2M5Z05LOUtVVmd2UjFTdUZ5ait4L1Z0SkE0TkFrRlk4RQo2VzJIWE9qNW1HcjFQdCtHaTVZRThCZ1dtZ2tDUnlTdjNqcThRcTFDdGNNZytoMXVlcU51d3RMd09RSitnOGZ3Ci9oMnpOeDdYOHFNTWJpdUFSeDlGTnVPWWNka0R4VVVtc3dNcy9udGNsNFZUUVN4L2ZCQ2xSTWRoYnhHeTFjUWsKQkFSR2pSTDMyL0dOaVpRWW0wVld5UENlQ3ZqbkZicUN4WlpNTUppL1R4NEdESnNZN3NJdEV6endnaVZUNDZxSwozd0M0V3hnN1VMYnAwWUNBYTVjQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQbHRBNDZkYVBVbDhqY2hzT3lSYnBOUXZkK2dNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRWRSczRzbFZodWhHRDRqRWo0cAp1OUJFSUNObDZickZ5WnhramhiOGM1UzNWSlN0OUdMdmI0dnFtdU9uMXAyKy9ubCtWS1JpaFFxaEMyOEFOV0VXCkdLUldERUpHU0VCU1JoeGpxano1cVQ5cXp3dU1SdGZxaS9zbWtKK3FRZlorS0s1ZS9haU5IV3BXeWE3RU93S3UKSEkvWDZ4clFlckJPMUtTdzJZYnM5VWltZmZUMzhkWTRiNmV0Q3VoZ1dXQmpmWCtFNDZ2Vk5MdGliTlFiRUxZMwo3Rk5JNHJpeTgwMGNaWFFTOHpLSDArenBMK0xoOVN2NWRjUG5HWWVSbnM4YjRkUGhua3M0aERqVEFWVGZUN0FsCkJCRlk0TDhtK1FXaGVNZ082cVUyd2Qxa1Vub2EvVmhIQitTSC9sTUk2MnY4YUxsWjM5SnNTUUNVTDFjb2Z4S00KR3hVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
              }
            ],
            "cluster_id": null,
            "created_at": "2023-01-08 09:35:58.998 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator",
              "controllerManager",
              "scheduler"
            ],
            "endpoint": "https://B55D11B7B9D026CF47CB1FE6BD35151A.gr7.ap-northeast-2.eks.amazonaws.com",
            "id": "blueprints-terraform",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.ap-northeast-2.amazonaws.com/id/B55D11B7B9D026CF47CB1FE6BD35151A"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "blueprints-terraform",
            "outpost_config": [],
            "platform_version": "eks.5",
            "role_arn": "arn:aws:iam::532805286864:role/blueprints-terraform-cluster-role",
            "status": "ACTIVE",
            "tags": {
              "Blueprint": "blueprints-terraform",
              "GithubRepo": "github.com/aws-ia/terraform-aws-eks-blueprints"
            },
            "version": "1.23",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0b5e691595caced40",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0fb1f68cd6fea450a"
                ],
                "subnet_ids": [
                  "subnet-02404a638cbcda547",
                  "subnet-04848f57159f7c020",
                  "subnet-0d650407efdccacde"
                ],
                "vpc_id": "vpc-0f7785a91de4a28e3"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Asia Pacific (Seoul)",
            "endpoint": "ec2.ap-northeast-2.amazonaws.com",
            "id": "ap-northeast-2",
            "name": "ap-northeast-2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons",
      "mode": "managed",
      "type": "time_sleep",
      "name": "dataplane",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "create_duration": "10s",
            "destroy_duration": null,
            "id": "2023-01-08T13:03:45Z",
            "triggers": {
              "data_plane_wait_arn": "",
              "eks_cluster_id": "blueprints-terraform"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "aws_lb",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2633998141",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DescribeTargetHealth\",\n        \"elasticloadbalancing:DescribeTargetGroups\",\n        \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n        \"elasticloadbalancing:DescribeTags\",\n        \"elasticloadbalancing:DescribeSSLPolicies\",\n        \"elasticloadbalancing:DescribeRules\",\n        \"elasticloadbalancing:DescribeLoadBalancers\",\n        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n        \"elasticloadbalancing:DescribeListeners\",\n        \"elasticloadbalancing:DescribeListenerCertificates\",\n        \"ec2:GetCoipPoolUsage\",\n        \"ec2:DescribeVpcs\",\n        \"ec2:DescribeVpcPeeringConnections\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeCoipPools\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"wafv2:GetWebACLForResource\",\n        \"wafv2:GetWebACL\",\n        \"wafv2:DisassociateWebACL\",\n        \"wafv2:AssociateWebACL\",\n        \"waf-regional:GetWebACLForResource\",\n        \"waf-regional:GetWebACL\",\n        \"waf-regional:DisassociateWebACL\",\n        \"waf-regional:AssociateWebACL\",\n        \"shield:GetSubscriptionState\",\n        \"shield:DescribeProtection\",\n        \"shield:DeleteProtection\",\n        \"shield:CreateProtection\",\n        \"iam:ListServerCertificates\",\n        \"iam:GetServerCertificate\",\n        \"cognito-idp:DescribeUserPoolClient\",\n        \"acm:ListCertificates\",\n        \"acm:DescribeCertificate\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateSecurityGroup\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"ec2:CreateAction\": \"CreateSecurityGroup\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\",\n        \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/ingress.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:DeleteTargetGroup\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/ingress.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\",\n        \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DeleteRule\",\n        \"elasticloadbalancing:DeleteListener\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateListener\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n      ]\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetSubnets\",\n        \"elasticloadbalancing:SetSecurityGroups\",\n        \"elasticloadbalancing:SetIpAddressType\",\n        \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n        \"elasticloadbalancing:ModifyTargetGroup\",\n        \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n        \"elasticloadbalancing:DeleteTargetGroup\",\n        \"elasticloadbalancing:DeleteLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterTargets\",\n        \"elasticloadbalancing:DeregisterTargets\"\n      ],\n      \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetWebAcl\",\n        \"elasticloadbalancing:RemoveListenerCertificates\",\n        \"elasticloadbalancing:ModifyRule\",\n        \"elasticloadbalancing:ModifyListener\",\n        \"elasticloadbalancing:AddListenerCertificates\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "iam:CreateServiceLinkedRole"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "elasticloadbalancing.amazonaws.com"
                    ],
                    "variable": "iam:AWSServiceName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeCoipPools",
                  "ec2:DescribeInstances",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeTags",
                  "ec2:DescribeVpcPeeringConnections",
                  "ec2:DescribeVpcs",
                  "ec2:GetCoipPoolUsage",
                  "elasticloadbalancing:DescribeListenerCertificates",
                  "elasticloadbalancing:DescribeListeners",
                  "elasticloadbalancing:DescribeLoadBalancerAttributes",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "elasticloadbalancing:DescribeRules",
                  "elasticloadbalancing:DescribeSSLPolicies",
                  "elasticloadbalancing:DescribeTags",
                  "elasticloadbalancing:DescribeTargetGroupAttributes",
                  "elasticloadbalancing:DescribeTargetGroups",
                  "elasticloadbalancing:DescribeTargetHealth"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "acm:DescribeCertificate",
                  "acm:ListCertificates",
                  "cognito-idp:DescribeUserPoolClient",
                  "iam:GetServerCertificate",
                  "iam:ListServerCertificates",
                  "shield:CreateProtection",
                  "shield:DeleteProtection",
                  "shield:DescribeProtection",
                  "shield:GetSubscriptionState",
                  "waf-regional:AssociateWebACL",
                  "waf-regional:DisassociateWebACL",
                  "waf-regional:GetWebACL",
                  "waf-regional:GetWebACLForResource",
                  "wafv2:AssociateWebACL",
                  "wafv2:DisassociateWebACL",
                  "wafv2:GetWebACL",
                  "wafv2:GetWebACLForResource"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateSecurityGroup"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateSecurityGroup"
                    ],
                    "variable": "ec2:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags",
                  "ec2:DeleteTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/ingress.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:DeleteTargetGroup",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/ingress.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags",
                  "ec2:DeleteTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:DeleteSecurityGroup",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:CreateLoadBalancer",
                  "elasticloadbalancing:CreateTargetGroup"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:CreateListener",
                  "elasticloadbalancing:CreateRule",
                  "elasticloadbalancing:DeleteListener",
                  "elasticloadbalancing:DeleteRule"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeleteLoadBalancer",
                  "elasticloadbalancing:DeleteTargetGroup",
                  "elasticloadbalancing:ModifyLoadBalancerAttributes",
                  "elasticloadbalancing:ModifyTargetGroup",
                  "elasticloadbalancing:ModifyTargetGroupAttributes",
                  "elasticloadbalancing:SetIpAddressType",
                  "elasticloadbalancing:SetSecurityGroups",
                  "elasticloadbalancing:SetSubnets"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeregisterTargets",
                  "elasticloadbalancing:RegisterTargets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddListenerCertificates",
                  "elasticloadbalancing:ModifyListener",
                  "elasticloadbalancing:ModifyRule",
                  "elasticloadbalancing:RemoveListenerCertificates",
                  "elasticloadbalancing:SetWebAcl"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0]",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "aws_load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::532805286864:policy/blueprints-terraform-lb-irsa",
            "description": "Allows lb controller to manage ALB and NLB",
            "id": "arn:aws:iam::532805286864:policy/blueprints-terraform-lb-irsa",
            "name": "blueprints-terraform-lb-irsa",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"iam:CreateServiceLinkedRole\",\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"elasticloadbalancing.amazonaws.com\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":[\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTags\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeVpcs\",\"ec2:DescribeVpcPeeringConnections\",\"ec2:DescribeTags\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeInstances\",\"ec2:DescribeCoipPools\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeAddresses\",\"ec2:DescribeAccountAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":[\"wafv2:GetWebACLForResource\",\"wafv2:GetWebACL\",\"wafv2:DisassociateWebACL\",\"wafv2:AssociateWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:GetWebACL\",\"waf-regional:DisassociateWebACL\",\"waf-regional:AssociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:DeleteProtection\",\"shield:CreateProtection\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"ec2:CreateSecurityGroup\",\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\",\"Sid\":\"\"},{\"Action\":[\"ec2:DeleteTags\",\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/ingress.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\",\"Sid\":\"\"},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:DeleteTargetGroup\",\"elasticloadbalancing:AddTags\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/ingress.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"],\"Sid\":\"\"},{\"Action\":[\"ec2:DeleteTags\",\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\",\"Sid\":\"\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":[\"elasticloadbalancing:DeleteRule\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateListener\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"],\"Sid\":\"\"},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"],\"Sid\":\"\"},{\"Action\":[\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:DeleteTargetGroup\",\"elasticloadbalancing:DeleteLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"Sid\":\"\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAXYDNLPPICQYO5PAEV",
            "tags": {
              "Blueprint": "blueprints-terraform",
              "GithubRepo": "github.com/aws-ia/terraform-aws-eks-blueprints"
            },
            "tags_all": {
              "Blueprint": "blueprints-terraform",
              "GithubRepo": "github.com/aws-ia/terraform-aws-eks-blueprints"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.aws_lb"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0].module.helm_addon",
      "mode": "managed",
      "type": "helm_release",
      "name": "addon",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "aws-load-balancer-controller",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": "aws-load-balancer-controller Helm Chart for ingress resources",
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "aws-load-balancer-controller",
            "keyring": "",
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.4.4",
                "chart": "aws-load-balancer-controller",
                "name": "aws-load-balancer-controller",
                "namespace": "kube-system",
                "revision": 1,
                "values": "{\"clusterName\":\"blueprints-terraform\",\"image\":{\"repository\":\"602401143452.dkr.ecr.ap-northeast-2.amazonaws.com/amazon/aws-load-balancer-controller\"},\"region\":\"ap-northeast-2\",\"serviceAccount\":{\"create\":false,\"name\":\"aws-load-balancer-controller-sa\"}}",
                "version": "1.4.5"
              }
            ],
            "name": "aws-load-balancer-controller",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [
              {
                "args": null,
                "binary_path": ""
              }
            ],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://aws.github.io/eks-charts",
            "repository_ca_file": null,
            "repository_cert_file": "",
            "repository_key_file": "",
            "repository_password": "",
            "repository_username": "",
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "serviceAccount.create",
                "type": "",
                "value": "false"
              },
              {
                "name": "serviceAccount.name",
                "type": "",
                "value": "aws-load-balancer-controller-sa"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 1200,
            "values": [
              "clusterName: blueprints-terraform\nregion: ap-northeast-2\nimage:\n  repository: 602401143452.dkr.ecr.ap-northeast-2.amazonaws.com/amazon/aws-load-balancer-controller\n"
            ],
            "verify": false,
            "version": "1.4.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "data.aws_eks_cluster_auth.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.aws_iam_policy.aws_load_balancer_controller",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.aws_lb",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.module.helm_addon.module.irsa.aws_iam_role.irsa",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.module.helm_addon.module.irsa.aws_iam_role_policy_attachment.irsa",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.module.helm_addon.module.irsa.kubernetes_namespace_v1.irsa",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.module.helm_addon.module.irsa.kubernetes_secret_v1.irsa",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.module.helm_addon.module.irsa.kubernetes_service_account_v1.irsa"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0].module.helm_addon.module.irsa[0]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::532805286864:role/blueprints-terraform-aws-load-balancer-controller-sa-irsa",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringLike\":{\"https://oidc.eks.ap-northeast-2.amazonaws.com/id/B55D11B7B9D026CF47CB1FE6BD35151A:aud\":\"sts.amazonaws.com\",\"https://oidc.eks.ap-northeast-2.amazonaws.com/id/B55D11B7B9D026CF47CB1FE6BD35151A:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller-sa\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::532805286864:oidc-provider/https://oidc.eks.ap-northeast-2.amazonaws.com/id/B55D11B7B9D026CF47CB1FE6BD35151A\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-01-08T13:08:55Z",
            "description": "AWS IAM Role for the Kubernetes service account aws-load-balancer-controller-sa.",
            "force_detach_policies": true,
            "id": "blueprints-terraform-aws-load-balancer-controller-sa-irsa",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "blueprints-terraform-aws-load-balancer-controller-sa-irsa",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Blueprint": "blueprints-terraform",
              "GithubRepo": "github.com/aws-ia/terraform-aws-eks-blueprints"
            },
            "tags_all": {
              "Blueprint": "blueprints-terraform",
              "GithubRepo": "github.com/aws-ia/terraform-aws-eks-blueprints"
            },
            "unique_id": "AROAXYDNLPPIBBCCHPCPK"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.aws_iam_policy.aws_load_balancer_controller",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.aws_lb"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0].module.helm_addon.module.irsa[0]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "blueprints-terraform-aws-load-balancer-controller-sa-irsa-20230108130856746200000001",
            "policy_arn": "arn:aws:iam::532805286864:policy/blueprints-terraform-lb-irsa",
            "role": "blueprints-terraform-aws-load-balancer-controller-sa-irsa"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.aws_iam_policy.aws_load_balancer_controller",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.aws_lb",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.module.helm_addon.module.irsa.aws_iam_role.irsa"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller[0].module.helm_addon.module.irsa[0]",
      "mode": "managed",
      "type": "kubernetes_service_account_v1",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": true,
            "default_secret_name": "aws-load-balancer-controller-sa-token-9pm5c",
            "id": "kube-system/aws-load-balancer-controller-sa",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {
                  "eks.amazonaws.com/role-arn": "arn:aws:iam::532805286864:role/blueprints-terraform-aws-load-balancer-controller-sa-irsa"
                },
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "aws-load-balancer-controller-sa",
                "namespace": "kube-system",
                "resource_version": "40438",
                "uid": "765216b9-d1e8-49d1-b2ff-4b0b6ff9b34a"
              }
            ],
            "secret": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "data.aws_eks_cluster_auth.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.aws_iam_policy.aws_load_balancer_controller",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.aws_lb",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.module.helm_addon.module.irsa.aws_iam_role.irsa",
            "module.eks_blueprints_kubernetes_addons.module.aws_load_balancer_controller.module.helm_addon.module.irsa.kubernetes_namespace_v1.irsa"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.cert_manager[0]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cert_manager_iam_policy_document",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "907102903",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"route53:GetChange\",\n      \"Resource\": \"arn:aws:route53:::change/*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"route53:ListresourceRecordSets\",\n        \"route53:ChangeresourceRecordSets\"\n      ],\n      \"Resource\": \"arn:aws:route53:::hostedzone/Z0582530BV26P4AI9BGR\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"route53:ListHostedZonesByName\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "route53:GetChange"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:route53:::change/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "route53:ChangeresourceRecordSets",
                  "route53:ListresourceRecordSets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:route53:::hostedzone/Z0582530BV26P4AI9BGR"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "route53:ListHostedZonesByName"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.cert_manager[0]",
      "mode": "data",
      "type": "aws_route53_zone",
      "name": "selected",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "steve-aws.com",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:route53:::hostedzone/Z0582530BV26P4AI9BGR",
            "caller_reference": "RISWorkflow-RD:e6042751-7d9e-426d-ba65-911caf6bbcbd",
            "comment": "HostedZone created by Route53 Registrar",
            "id": "Z0582530BV26P4AI9BGR",
            "linked_service_description": null,
            "linked_service_principal": null,
            "name": "steve-aws.com",
            "name_servers": [
              "ns-369.awsdns-46.com",
              "ns-1195.awsdns-21.org",
              "ns-1552.awsdns-02.co.uk",
              "ns-543.awsdns-03.net"
            ],
            "primary_name_server": "ns-369.awsdns-46.com",
            "private_zone": false,
            "resource_record_set_count": 8,
            "tags": {},
            "vpc_id": null,
            "zone_id": "Z0582530BV26P4AI9BGR"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.cert_manager[0]",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::532805286864:policy/blueprints-terraform-cert-manager-irsa",
            "description": "cert-manager IAM policy.",
            "id": "arn:aws:iam::532805286864:policy/blueprints-terraform-cert-manager-irsa",
            "name": "blueprints-terraform-cert-manager-irsa",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"route53:GetChange\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:route53:::change/*\",\"Sid\":\"\"},{\"Action\":[\"route53:ListresourceRecordSets\",\"route53:ChangeresourceRecordSets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:route53:::hostedzone/Z0582530BV26P4AI9BGR\",\"Sid\":\"\"},{\"Action\":\"route53:ListHostedZonesByName\",\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAXYDNLPPIB3W3ZOKK7",
            "tags": {
              "Blueprint": "blueprints-terraform",
              "GithubRepo": "github.com/aws-ia/terraform-aws-eks-blueprints"
            },
            "tags_all": {
              "Blueprint": "blueprints-terraform",
              "GithubRepo": "github.com/aws-ia/terraform-aws-eks-blueprints"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_iam_policy_document.cert_manager_iam_policy_document",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_route53_zone.selected",
            "module.eks_blueprints_kubernetes_addons.time_sleep.dataplane"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.cert_manager[0]",
      "mode": "managed",
      "type": "helm_release",
      "name": "cert_manager_ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": ".terraform/modules/eks_blueprints_kubernetes_addons/modules/kubernetes-addons/cert-manager/cert-manager-ca",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cert-manager-ca",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.1.0",
                "chart": "cert-manager-ca",
                "name": "cert-manager-ca",
                "namespace": "cert-manager",
                "revision": 1,
                "values": "null",
                "version": "0.2.0"
              }
            ],
            "name": "cert-manager-ca",
            "namespace": "cert-manager",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.2.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "data.aws_eks_cluster_auth.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.aws_iam_policy.cert_manager",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_iam_policy_document.cert_manager_iam_policy_document",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_route53_zone.selected",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.helm_release.addon",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.aws_iam_role.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.aws_iam_role_policy_attachment.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.kubernetes_namespace_v1.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.kubernetes_secret_v1.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.kubernetes_service_account_v1.irsa",
            "module.eks_blueprints_kubernetes_addons.time_sleep.dataplane"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.cert_manager[0]",
      "mode": "managed",
      "type": "helm_release",
      "name": "cert_manager_letsencrypt",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": ".terraform/modules/eks_blueprints_kubernetes_addons/modules/kubernetes-addons/cert-manager/cert-manager-letsencrypt",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cert-manager-letsencrypt",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.1.0",
                "chart": "cert-manager-letsencrypt",
                "name": "cert-manager-letsencrypt",
                "namespace": "cert-manager",
                "revision": 1,
                "values": "{\"dnsZones\":[\"steve-aws.com\"],\"email\":\"whpark@saltware.co.kr\"}",
                "version": "0.1.0"
              }
            ],
            "name": "cert-manager-letsencrypt",
            "namespace": "cert-manager",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "dnsZones",
                "type": "string",
                "value": "{steve-aws.com}"
              },
              {
                "name": "email",
                "type": "string",
                "value": "whpark@saltware.co.kr"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "data.aws_eks_cluster_auth.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.aws_iam_policy.cert_manager",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_iam_policy_document.cert_manager_iam_policy_document",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_route53_zone.selected",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.helm_release.addon",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.aws_iam_role.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.aws_iam_role_policy_attachment.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.kubernetes_namespace_v1.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.kubernetes_secret_v1.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.kubernetes_service_account_v1.irsa",
            "module.eks_blueprints_kubernetes_addons.time_sleep.dataplane"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.cert_manager[0].module.helm_addon",
      "mode": "managed",
      "type": "helm_release",
      "name": "addon",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "cert-manager",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": "Cert Manager Add-on",
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cert-manager",
            "keyring": "",
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.10.0",
                "chart": "cert-manager",
                "name": "cert-manager",
                "namespace": "cert-manager",
                "revision": 1,
                "values": "{\"extraArgs\":[\"--enable-certificate-owner-ref=true\"],\"installCRDs\":true,\"serviceAccount\":{\"create\":false,\"name\":\"cert-manager\"}}",
                "version": "v1.10.0"
              }
            ],
            "name": "cert-manager",
            "namespace": "cert-manager",
            "pass_credentials": false,
            "postrender": [
              {
                "args": [],
                "binary_path": ""
              }
            ],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.jetstack.io",
            "repository_ca_file": null,
            "repository_cert_file": "",
            "repository_key_file": "",
            "repository_password": "",
            "repository_username": "",
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "serviceAccount.create",
                "type": "",
                "value": "false"
              },
              {
                "name": "serviceAccount.name",
                "type": "",
                "value": "cert-manager"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 1200,
            "values": [
              "extraArgs:\n  - --enable-certificate-owner-ref=true\n\ninstallCRDs: true\n"
            ],
            "verify": false,
            "version": "v1.10.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "data.aws_eks_cluster_auth.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.aws_iam_policy.cert_manager",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_iam_policy_document.cert_manager_iam_policy_document",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_route53_zone.selected",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.aws_iam_role.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.aws_iam_role_policy_attachment.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.kubernetes_namespace_v1.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.kubernetes_secret_v1.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.kubernetes_service_account_v1.irsa",
            "module.eks_blueprints_kubernetes_addons.time_sleep.dataplane"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.cert_manager[0].module.helm_addon.module.irsa[0]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::532805286864:role/blueprints-terraform-cert-manager-irsa",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringLike\":{\"https://oidc.eks.ap-northeast-2.amazonaws.com/id/B55D11B7B9D026CF47CB1FE6BD35151A:aud\":\"sts.amazonaws.com\",\"https://oidc.eks.ap-northeast-2.amazonaws.com/id/B55D11B7B9D026CF47CB1FE6BD35151A:sub\":\"system:serviceaccount:cert-manager:cert-manager\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::532805286864:oidc-provider/https://oidc.eks.ap-northeast-2.amazonaws.com/id/B55D11B7B9D026CF47CB1FE6BD35151A\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-01-08T13:03:47Z",
            "description": "AWS IAM Role for the Kubernetes service account cert-manager.",
            "force_detach_policies": true,
            "id": "blueprints-terraform-cert-manager-irsa",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::532805286864:policy/blueprints-terraform-cert-manager-irsa"
            ],
            "max_session_duration": 3600,
            "name": "blueprints-terraform-cert-manager-irsa",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Blueprint": "blueprints-terraform",
              "GithubRepo": "github.com/aws-ia/terraform-aws-eks-blueprints"
            },
            "tags_all": {
              "Blueprint": "blueprints-terraform",
              "GithubRepo": "github.com/aws-ia/terraform-aws-eks-blueprints"
            },
            "unique_id": "AROAXYDNLPPILEC565VID"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.aws_iam_policy.cert_manager",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_iam_policy_document.cert_manager_iam_policy_document",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_route53_zone.selected",
            "module.eks_blueprints_kubernetes_addons.time_sleep.dataplane"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.cert_manager[0].module.helm_addon.module.irsa[0]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "blueprints-terraform-cert-manager-irsa-20230108130349299800000001",
            "policy_arn": "arn:aws:iam::532805286864:policy/blueprints-terraform-cert-manager-irsa",
            "role": "blueprints-terraform-cert-manager-irsa"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.aws_iam_policy.cert_manager",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_iam_policy_document.cert_manager_iam_policy_document",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_route53_zone.selected",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.aws_iam_role.irsa",
            "module.eks_blueprints_kubernetes_addons.time_sleep.dataplane"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.cert_manager[0].module.helm_addon.module.irsa[0]",
      "mode": "managed",
      "type": "kubernetes_namespace_v1",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cert-manager",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "cert-manager",
                "resource_version": "39180",
                "uid": "48be8a9f-418f-4f8b-80c1-0bc5ade7f0b6"
              }
            ],
            "timeouts": {
              "delete": "15m"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjo5MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "data.aws_eks_cluster_auth.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.aws_iam_policy.cert_manager",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_iam_policy_document.cert_manager_iam_policy_document",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_route53_zone.selected",
            "module.eks_blueprints_kubernetes_addons.time_sleep.dataplane"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_kubernetes_addons.module.cert_manager[0].module.helm_addon.module.irsa[0]",
      "mode": "managed",
      "type": "kubernetes_service_account_v1",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": true,
            "default_secret_name": "cert-manager-token-qn9hz",
            "id": "cert-manager/cert-manager",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {
                  "eks.amazonaws.com/role-arn": "arn:aws:iam::532805286864:role/blueprints-terraform-cert-manager-irsa"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "cert-manager",
                "namespace": "cert-manager",
                "resource_version": "39192",
                "uid": "053e4c1c-7817-48f5-aa9f-2aa47696bdd2"
              }
            ],
            "secret": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_eks_cluster.eks_blueprints",
            "data.aws_eks_cluster_auth.eks_blueprints",
            "module.eks_blueprints_kubernetes_addons.data.aws_caller_identity.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_eks_cluster.eks_cluster",
            "module.eks_blueprints_kubernetes_addons.data.aws_partition.current",
            "module.eks_blueprints_kubernetes_addons.data.aws_region.current",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.aws_iam_policy.cert_manager",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_iam_policy_document.cert_manager_iam_policy_document",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.data.aws_route53_zone.selected",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.aws_iam_role.irsa",
            "module.eks_blueprints_kubernetes_addons.module.cert_manager.module.helm_addon.module.irsa.kubernetes_namespace_v1.irsa",
            "module.eks_blueprints_kubernetes_addons.time_sleep.dataplane"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
